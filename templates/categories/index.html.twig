{% extends 'base.html.twig' %}

{% block body %}
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Explore Communities</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
  <style>
    :root {
      --coffee-50: #faf8f5;
      --coffee-100: #f4efe6;
      --coffee-200: #e8dcc9;
      --coffee-300: #d7c2a3;
      --coffee-400: #c4a47c;
      --coffee-500: #b5906a;
      --coffee-600: #a67c5a;
      --coffee-700: #8a654c;
      --coffee-800: #715344;
      --coffee-900: #5d4439;
    }
    
    .reddit-container {
      background-color: var(--coffee-50);
      min-height: 100vh;
    }
    
    .reddit-card {
      background-color: #ffffff;
      border: 1px solid #e7e5e4;
      border-radius: 1.5rem;
      transition: all 0.5s ease;
      overflow: hidden;
    }
    
    .reddit-card:hover {
      box-shadow: 0 25px 50px -12px rgb(0 0 0 / 0.25);
      transform: translateY(-8px);
    }
    
    .reddit-text-light {
      color: #78716c;
    }
    
    .gradient-text {
      background: linear-gradient(to right, var(--coffee-700), var(--coffee-800));
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
    }

    .zone-badge {
      display: inline-flex;
      align-items: center;
      padding: 0.5rem 1rem;
      border-radius: 9999px;
      font-size: 0.875rem;
      font-weight: 500;
      border: 1px solid;
    }

    .zone-safe {
      background-color: #fafaf9;
      color: #57534e;
      border-color: #e7e5e4;
    }

    .zone-moderate {
      background-color: #fafaf9;
      color: #78716c;
      border-color: #e7e5e4;
    }

    .zone-danger {
      background-color: #fffbeb;
      color: #b45309;
      border-color: #fed7aa;
    }

    .card-header {
      background: linear-gradient(to bottom right, var(--coffee-50), var(--coffee-100));
      padding: 2rem;
      padding-bottom: 1.5rem;
    }

    .icon-container {
      background: linear-gradient(to bottom right, var(--coffee-200), var(--coffee-300));
      width: 4rem;
      height: 4rem;
      border-radius: 1rem;
      display: flex;
      align-items: center;
      justify-content: center;
      box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1);
      transition: box-shadow 0.3s ease;
    }

    .reddit-card:hover .icon-container {
      box-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1);
    }

    .icon-container:hover {
      box-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1);
    }

    .join-button {
      background: linear-gradient(to right, var(--coffee-500), var(--coffee-600));
      color: white;
      font-weight: 600;
      padding: 0.75rem 1.5rem;
      border-radius: 0.75rem;
      transition: all 0.2s ease;
      box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1);
      flex: 1;
      display: inline-flex;
      align-items: center;
      justify-content: center;
    }

    .join-button:hover {
      transform: scale(1.05);
      opacity: 0.9;
      box-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1);
    }

    /* New style for subscribed state */
    .join-button.is-subscribed-red {
      background:#d7c2a3; /* red-600 J'ai changé */
    }
    .join-button.is-subscribed-red:hover {
      background: #d7c2a3; /* red-700 J'ai changé*/
    }

    .view-button {
      background: white;
      border: 2px solid #e7e5e4;
      color: #78716c;
      font-weight: 600;
      padding: 0.75rem 1.5rem;
      border-radius: 0.75rem;
      transition: all 0.2s ease;
      box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1);
      flex: 1;
      display: inline-flex;
      align-items: center;
      justify-content: center;
    }

    .view-button:hover {
      background: #fafaf9;
      border-color: #d6d3d1;
      transform: scale(1.05);
      box-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1);
    }

    .vote-button {
      padding: 0.75rem;
      border-radius: 0.75rem;
      transition: all 0.2s ease;
    }

    .vote-button:hover {
      background: #fafaf9;
    }

    .hero-pattern {
      background-image: url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23a67c5a' fill-opacity='0.03'%3E%3Ccircle cx='30' cy='30' r='2'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
      position: absolute;
      inset: 0;
      opacity: 0.1;
    }

    .search-overlay {
      background: linear-gradient(to right, var(--coffee-500), var(--coffee-600));
      position: absolute;
      inset: 0;
      border-radius: 1rem;
      filter: blur(8px);
      opacity: 0.2;
      transition: opacity 0.3s ease;
    }

    .search-container:hover .search-overlay {
      opacity: 0.3;
    }

    .stats-button {
      background: linear-gradient(to right, var(--coffee-500), var(--coffee-600));
      color: white;
      font-weight: 600;
      padding: 1rem 2rem;
      border-radius: 1rem;
      box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1);
      transition: all 0.3s ease;
      display: flex;
      align-items: center;
      gap: 0.75rem;
      border: 2px solid transparent;
    }

    .stats-button:hover {
      box-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1);
      transform: scale(1.05);
      opacity: 0.9;
    }

    .zone-button {
      padding: 1rem 2rem;
      border-radius: 1rem;
      font-weight: 600;
      box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1);
      transition: all 0.3s ease;
      display: flex;
      align-items: center;
      gap: 0.75rem;
      border: 2px solid;
    }

    .zone-button:hover {
      box-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1);
      transform: scale(1.05);
    }

    .zone-button.active {
      background: #f5f5f4;
      color: #78716c;
      border-color: #d6d3d1;
    }

    .zone-button:not(.active) {
      background: white;
      color: #78716c;
      border-color: #e7e5e4;
    }

    .zone-button:not(.active):hover {
      background: #fafaf9;
    }

    .load-more-button {
      position: relative;
      padding: 1rem 3rem;
      font-size: 1.125rem;
      font-weight: 600;
      color: #78716c;
      background: white;
      border: 2px solid #e7e5e4;
      border-radius: 1rem;
      transition: all 0.3s ease;
      box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1);
    }

    .load-more-button:hover {
      background: #fafaf9;
      border-color: #d6d3d1;
      transform: scale(1.05);
      box-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1);
    }

    .load-more-overlay {
      background: linear-gradient(to right, var(--coffee-500), var(--coffee-600));
      position: absolute;
      inset: 0;
      border-radius: 1rem;
      opacity: 0;
      transition: opacity 0.3s ease;
    }

    .load-more-button:hover .load-more-overlay {
      opacity: 0.1;
    }

    /* Common styles for all filter buttons (All Communities, Safe, Moderate, Danger) */
    .filter-common-styles {
      padding: 1rem 2rem;
      border-radius: 1rem;
      font-weight: 600;
      box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1);
      transition: all 0.3s ease;
      display: flex;
      align-items: center;
      gap: 0.75rem;
      border: 2px solid;
    }
    .filter-common-styles:hover {
      box-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1);
      transform: scale(1.05);
    }

    /* Active state for "All Communities" button */
    .all-communities-active {
      background: linear-gradient(to right, var(--coffee-500), var(--coffee-600));
      color: white;
      border-color: transparent;
    }
    .all-communities-active:hover {
      opacity: 0.9;
    }

    /* Inactive state for all filter buttons */
    .filter-inactive {
      background: white;
      color: #78716c;
      border-color: #e7e5e4;
    }
    .filter-inactive:hover {
      background: #fafaf9;
      border-color: #d6d3d1;
    }

    /* Specific active states for Safe, Moderate, Danger Zones */
    .zone-safe.active {
      background-color: #dcfce7; /* light green */
      color: #16a34a; /* dark green */
      border-color: #86efac; /* green border */
    }
    .zone-moderate.active {
      background-color: #fef9c3; /* light yellow */
      color: #ca8a04; /* dark yellow */
      border-color: #fde047; /* yellow border */
    }
    .zone-danger.active {
      background-color: #fee2e2; /* light red */
      color: #dc2626; /* dark red */
      border-color: #fca5a5; /* red border */
    }
  </style>
</head>
<body class="reddit-container bg-gray-100" >
    {% include 'home/_navbar.html.twig' %}

    <!-- Hero Section -->
    <div class="relative overflow-hidden">
      <div class="hero-pattern"></div>
      <div class="relative max-w-7xl mx-auto px-4 py-16">
        <div class="text-center">
          <div class="mb-6">
            <h1 class="text-6xl md:text-7xl font-bold mb-4 gradient-text">
              Explore Communities
            </h1>
            <div class="w-24 h-1 mx-auto rounded-full" style="background: linear-gradient(to right, var(--coffee-500), var(--coffee-600));"></div>
          </div>
          
          <p class="text-xl reddit-text-light max-w-2xl mx-auto mb-12 leading-relaxed">
            Discover and join communities that match your interests with our advanced safety rating system
          </p>
          
          <!-- Search Bar -->
          <div class="max-w-lg mx-auto mb-12">
            <form action="{{ path('categories_index') }}" method="GET" class="search-container relative group">
              <div class="search-overlay"></div>
              <div class="relative bg-white rounded-2xl shadow-lg border border-stone-200">
                <svg class="absolute left-6 top-1/2 transform -translate-y-1/2 reddit-text-light w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                </svg>
                <input type="text" name="search" value="{{ search }}" placeholder="Search communities..." class="w-full pl-14 pr-6 py-4 text-lg bg-transparent border-none rounded-2xl focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-stone-300">
              </div>
            </form>
          </div>

          <!-- Create Category Button -->
          <div class="max-w-lg mx-auto mb-12">
            <a href="{{ path('categories_new') }}" class="stats-button w-full">
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z" clip-rule="evenodd"></path>
              </svg>
              Create new community
            </a>
          </div>

          <!-- Stats -->
          <div class="flex flex-wrap justify-center gap-6 mb-8">
            <a href="{{ path('categories_index', {'search': search}) }}" class="filter-common-styles {% if zone == '' %}all-communities-active{% else %}filter-inactive{% endif %}">
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M11.3 1.046A1 1 0 0112 2v5h4a1 1 0 01.82 1.573l-7 10A1 1 0 018 18v-5H4a1 1 0 01-.82-1.573l7-10a1 1 0 011.12-.38z" clip-rule="evenodd"></path>
              </svg>
              All Communities ({{ totalAllCategoriesCount }})
            </a>
            <a href="{{ path('categories_index', {'search': search, 'zone': 'safe'}) }}" class="filter-common-styles {% if zone == 'safe' %}zone-safe active{% else %}filter-inactive{% endif %}">
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
              </svg>
              Safe Zone
            </a>
            <a href="{{ path('categories_index', {'search': search, 'zone': 'moderate'}) }}" class="filter-common-styles {% if zone == 'moderate' %}zone-moderate active{% else %}filter-inactive{% endif %}">
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd"></path>
              </svg>
              Moderate Zone
            </a>
            <a href="{{ path('categories_index', {'search': search, 'zone': 'danger'}) }}" class="filter-common-styles {% if zone == 'danger' %}zone-danger active{% else %}filter-inactive{% endif %}">
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd"></path>
              </svg>
              Danger Zone
            </a>
          </div>
        </div>
      </div>
    </div>

    <!-- Communities Grid -->
    <div class="max-w-7xl mx-auto px-4 py-12">
      <div class="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-8">
        {% for category in categories %}
          <div class="reddit-card group">
            <div class="card-header">
              <div class="flex items-start justify-between mb-4">
                <div class="flex items-center gap-4 flex-1">
                  <div class="icon-container">
                    {% if category.icon starts with 'fa-' %}
                      <i class="fas {{ category.icon }} text-2xl"></i>
                    {% else %}
                      <i class="fas fa-folder text-2xl"></i>
                    {% endif %}
                  </div>
                  <div class="flex-1">
                    <div class="flex items-center gap-2 mb-2">
                      <h3 class="text-xl font-bold text-stone-900 group-hover:text-stone-700 transition-colors duration-300">
                        {{ category.name }}
                      </h3>
                    </div>
                    {% if category.dangerous < 0 %}
                      <span class="zone-badge zone-danger">
                        <svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 20 20">
                          <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd"></path>
                        </svg>
                        Danger Zone ({{ category.dangerous }} points)
                      </span>
                    {% elseif category.dangerous < 500 %}
                      <span class="zone-badge zone-moderate">
                        <svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 20 20">
                          <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd"></path>
                        </svg>
                        Moderate Zone ({{ category.dangerous }} points)
                      </span>
                    {% else %}
                      <span class="zone-badge zone-safe">
                        <svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 20 20">
                          <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
                        </svg>
                        Safe Zone ({{ category.dangerous }} points)
                      </span>
                    {% endif %}
                  </div>
                </div>
              </div>
              
              <p class="reddit-text-light text-sm leading-relaxed">
                {{ category.description }}
              </p>
            </div>
            
            <div class="p-8 pt-0">
              <div class="flex items-center justify-between mb-8">
                <div class="flex gap-8">
                  <div class="text-center">
                    <div class="flex items-center gap-2 mb-1">
                      <svg class="w-5 h-5 text-stone-600" fill="currentColor" viewBox="0 0 20 20">
                        <path d="M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3z"></path>
                      </svg>
                      <span class="text-lg font-bold text-stone-900">
                        {{ category.abonnements|length }}
                      </span>
                    </div>
                    <div class="reddit-text-light text-sm">members</div>
                  </div>
                  <div class="text-center">
                    <div class="flex items-center gap-2 mb-1">
                      <svg class="w-5 h-5 text-stone-600" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M18 10c0 3.866-3.582 7-8 7a8.841 8.841 0 01-4.083-.98L2 17l1.338-3.123C2.493 12.767 2 11.434 2 10c0-3.866 3.582-7 8-7s8 3.134 8 7zM7 9H5v2h2V9zm8 0h-2v2h2V9zM9 9h2v2H9V9z" clip-rule="evenodd"></path>
                      </svg>
                      <span class="text-lg font-bold text-stone-900">
                        {{ category.posts|length }}
                      </span>
                    </div>
                    <div class="reddit-text-light text-sm">posts</div>
                  </div>
                </div>
                
                <div class="flex items-center gap-2">
                  <button class="vote-button group/vote safe-like-btn" data-category-id="{{ category.id }}">
                    <svg class="safe-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="black" width="16" height="16">
                      <path d="M12 2L4 5v6c0 5.55 3.84 10.74 8 11 4.16-.26 8-5.45 8-11V5l-8-3z"/>
                      <path fill="white" d="M10.5 14.5l-2.5-2.5 1.41-1.41L10.5 11.67l4.59-4.59L16.5 8.5z"/>
                    </svg>
                  </button>

                  <span id="safe-likes-{{ category.id }}" class="text-sm" style="font-weight: 600;">{{ category.countSafeLikes() }}</span>

                  <button class="vote-button group/vote dangerous-like-btn" data-category-id="{{ category.id }}">
                    <svg class="danger-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="black" width="16" height="16">
                      <path d="M1 21h22L12 2 1 21z"/>
                      <path fill="white" d="M13 16h-2v2h2v-2zm0-6h-2v4h2v-4z"/>
                    </svg>
                  </button>
                  <span id="dangerous-likes-{{ category.id }}" class="text-sm" style="font-weight: 600;">{{ category.countDangerousLikes() }}</span>
                </div>
              </div>

              <div class="flex gap-3">
                {% set isSubscribed = false %}
                {% if app.user %}
                  {% for abonnement in userSubscriptions %}
                    {% if abonnement.category and abonnement.category.id == category.id %}
                      {% set isSubscribed = true %}
                    {% endif %}
                  {% endfor %}
                {% endif %}
                <button onclick="joinCategory({{ category.id }}, this, {{ isSubscribed ? 'true' : 'false' }})" class="join-button {{ isSubscribed ? 'is-subscribed-red' : '' }}">
                  {{ isSubscribed ? 'Leave' : 'Join' }}
                </button>
                <a href="{{ path('categories_posts', {'id': category.id}) }}" class="view-button">
                  View Posts
                </a>
              </div>
            </div>
          </div>
        {% endfor %}
      </div>

      <!-- Load More -->
      <div class="text-center mt-16">
        {% if currentPage < totalPages %}
          <button id="loadMoreBtn" class="load-more-button">
            <span class="relative z-10">Load More Categories</span>
            <div class="load-more-overlay"></div>
          </button>
        {% endif %}
      </div>
    </div>

    <script>
      document.addEventListener('DOMContentLoaded', function() {
        const searchInput = document.querySelector('input[name="search"]');
        const loadMoreBtn = document.getElementById('loadMoreBtn');
        let currentPage = {{ currentPage }};
        const searchTerm = '{{ search }}';
        const currentZone = '{{ zone }}';

        // Search functionality
        searchInput.addEventListener('input', function(e) {
          const searchTerm = e.target.value;
          let url = `{{ path('categories_index') }}?search=${encodeURIComponent(searchTerm)}`;
          if (currentZone) {
            url += `&zone=${encodeURIComponent(currentZone)}`;
          }
          window.location.href = url;
        });

        // Load more functionality
        if (loadMoreBtn) {
          loadMoreBtn.addEventListener('click', function() {
            currentPage++;
            const url = new URL(`{{ path('categories_index') }}`, window.location.origin);
            url.searchParams.set('page', currentPage);
            if (searchTerm) {
              url.searchParams.set('search', searchTerm);
            }
            if (currentZone) {
              url.searchParams.set('zone', currentZone);
            }

            // Show loading state
            loadMoreBtn.disabled = true;
            loadMoreBtn.innerHTML = '<span class="relative z-10">Loading...</span><div class="load-more-overlay"></div>';

            fetch(url.toString())
              .then(response => response.text())
              .then(html => {
                const parser = new DOMParser();
                const doc = parser.parseFromString(html, 'text/html');
                const newCards = doc.querySelectorAll('.reddit-card');
                
                if (newCards.length > 0) {
                  const grid = document.querySelector('.grid');
                  newCards.forEach(card => {
                    grid.appendChild(card);
                  });
                }
                
                // Reset button state
                loadMoreBtn.disabled = false;
                loadMoreBtn.innerHTML = '<span class="relative z-10">Load More Categories</span><div class="load-more-overlay"></div>';
                
                // Hide button if no more pages
                if (currentPage >= {{ totalPages }}) {
                  loadMoreBtn.style.display = 'none';
                }
              })
              .catch(error => {
                console.error('Error:', error);
                // Reset button state on error
                loadMoreBtn.disabled = false;
                loadMoreBtn.innerHTML = '<span class="relative z-10">Load More Categories</span><div class="load-more-overlay"></div>';
              });
          });
        }

        // Like functionality
        document.querySelectorAll('.safe-like-btn, .dangerous-like-btn').forEach(button => {
          button.addEventListener('click', function() {
            const categoryId = this.dataset.categoryId;
            const type = this.classList.contains('safe-like-btn') ? 'safe' : 'dangerous';
            
            fetch(`{{ path('category_toggle_like', {'id': 0}) }}`.replace('0', categoryId), {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
              },
              body: JSON.stringify({ type: type })
            })
            .then(response => {
              if (response.status === 401) {
                window.location.href = '{{ path('app_login') }}';
                return;
              }
              return response.json();
            })
            .then(data => {
              if (data) {
                const safeLikesElement = document.getElementById(`safe-likes-${categoryId}`);
                const dangerousLikesElement = document.getElementById(`dangerous-likes-${categoryId}`);
                
                if (safeLikesElement) safeLikesElement.textContent = data.safeLikes;
                if (dangerousLikesElement) dangerousLikesElement.textContent = data.dangerousLikes;

                // Update zone badge if needed
                const cardElement = this.closest('.reddit-card');
                const zoneBadge = cardElement.querySelector('.zone-badge');
                if (zoneBadge) {
                  const dangerousScore = data.dangerousScore;
                  let newZoneClass = '';
                  let newZoneText = '';
                  
                  if (dangerousScore < 0) {
                    newZoneClass = 'zone-danger';
                    newZoneText = 'Danger Zone';
                  } else if (dangerousScore < 500) {
                    newZoneClass = 'zone-moderate';
                    newZoneText = 'Moderate Zone';
                  } else {
                    newZoneClass = 'zone-safe';
                    newZoneText = 'Safe Zone';
                  }
                  
                  zoneBadge.className = `zone-badge ${newZoneClass}`;
                  zoneBadge.innerHTML = `
                    <svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 20 20">
                      <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd"></path>
                    </svg>
                    ${newZoneText} (${dangerousScore} points)
                  `;
                }
              }
            })
            .catch(error => {
              console.error('Error:', error);
            });
          });
        });
      });

      function joinCategory(categoryId, button, isSubscribedInitial) {
        let isSubscribed = isSubscribedInitial;
        fetch(`{{ path('categories_join', {'id': 0}) }}`.replace('0', categoryId), {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          }
        })
        .then(response => {
          if (response.status === 401) {
            window.location.href = '{{ path('app_login') }}';
            return;
          }
          if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
          }
          return response.json();
        })
        .then(data => {
          isSubscribed = data.isSubscribed;

          const cardElement = button.closest('.reddit-card');
          const membersCountSpan = cardElement.querySelector('.text-center .text-lg.font-bold.text-stone-900');
          let currentMembers = parseInt(membersCountSpan.textContent);

          if (isSubscribed) {
            button.textContent = 'Leave';
            button.classList.add('is-subscribed-red');
            currentMembers++;
          } else {
            button.textContent = 'Join';
            button.classList.remove('is-subscribed-red');
            currentMembers--;
          }
          membersCountSpan.textContent = currentMembers;
        })
        .catch(error => {
          console.error('Error:', error);
          if (isSubscribedInitial) {
            button.textContent = 'Leave';
            button.classList.add('is-subscribed-red');
          } else {
            button.textContent = 'Join';
            button.classList.remove('is-subscribed-red');
          }
        });
      }
    </script>
</body>
</html>
{% endblock %}
