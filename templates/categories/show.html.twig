{% extends 'base.html.twig' %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        :root {
            /* Coffee color palette */
            --coffee-50: #faf8f5;
            --coffee-100: #f4efe6;
            --coffee-200: #e8dcc9;
            --coffee-300: #d7c2a3;
            --coffee-400: #c4a47c;
            --coffee-500: #b5906a;
            --coffee-600: #a67c5a;
            --coffee-700: #8a654c;
            --coffee-800: #715344;
            --coffee-900: #5d4439;
        }
    </style>
{% endblock %}

{% block body %}
{% include 'home/_navbar.html.twig' %}
<div class="min-h-screen" style="background-color: var(--coffee-50);">
  <div class="max-w-5xl mx-auto px-4 py-6">
    
    <!-- Back to Community Button -->
    <div class="mb-4">
      <a href="{{ path('categories_index') }}" class="inline-flex items-center text-sm font-semibold transition-colors"
         style="color: var(--coffee-600); hover:color: var(--coffee-700);">
        <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
        </svg>
        Retour à la communauté
      </a>
    </div>

    <!-- Category Header -->
    <div class="flex items-center justify-between mb-6">
      <div>
        <h1 class="text-2xl font-bold" style="color: var(--coffee-900);">
          r/{{ categorie.name }}
        </h1>
        <p class="text-sm" style="color: var(--coffee-600);">
          {{ posts|length }} posts • {{ categorie.abonnements|length }} abonnés
        </p>
      </div>
      
      <a href="{{ path('posts_ajout', {'id': categorie.id}) }}" 
         class="px-4 py-2 rounded shadow-lg text-white transition-colors" 
         style="background-color: var(--coffee-600);" 
         onmouseover="this.style.backgroundColor='var(--coffee-700)'" 
         onmouseout="this.style.backgroundColor='var(--coffee-600)'">
        <svg class="w-4 h-4 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
        </svg>
        Créer un post
      </a>
    </div>

    <!-- Posts Section -->
    {% if posts is empty %}
      <div class="text-center py-12">
        <div class="w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4" style="background-color: var(--coffee-100);">
          <svg class="w-8 h-8" style="color: var(--coffee-600);" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"></path>
          </svg>
        </div>
        <h3 class="text-lg font-semibold mb-2" style="color: var(--coffee-900);">
          Aucun post trouvé dans cette catégorie
        </h3>
        <p class="mb-4" style="color: var(--coffee-600);">
          Soyez le premier à partager quelque chose !
        </p>
        <a href="{{ path('posts_ajout', {'id': categorie.id}) }}" 
           class="px-4 py-2 rounded text-white transition-colors" 
           style="background-color: var(--coffee-600);"
           onmouseover="this.style.backgroundColor='var(--coffee-700)'" 
           onmouseout="this.style.backgroundColor='var(--coffee-600)'">
          <svg class="w-4 h-4 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
          </svg>
          Créer le premier post
        </a>
      </div>
    {% else %}
      <div class="space-y-4">
        {% for post in posts %}
        <div class="bg-white rounded-lg shadow-sm border transition-colors duration-200" 
             style="border-color: var(--coffee-200);" 
             onmouseover="this.style.borderColor='var(--coffee-300)'" 
             onmouseout="this.style.borderColor='var(--coffee-200)'">
          <div class="p-0">
            <div class="flex">
              <!-- Safe/Dangerous Likes Section -->
              <div class="flex flex-col items-center p-3 rounded-l-lg" style="background-color: var(--coffee-50);">
                <div class="flex items-center gap-2 flex-col">
                  <button class="safe-like-btn p-1 rounded transition-colors" 
                          data-post-id="{{ post.id }}"
                          onmouseover="this.style.backgroundColor='var(--coffee-100)'" 
                          onmouseout="this.style.backgroundColor='transparent'">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="black" width="16" height="16">
                      <path d="M12 2L4 5v6c0 5.55 3.84 10.74 8 11 4.16-.26 8-5.45 8-11V5l-8-3z"/>
                      <path fill="white" d="M10.5 14.5l-2.5-2.5 1.41-1.41L10.5 11.67l4.59-4.59L16.5 8.5z"/>
                    </svg>
                  </button>
                  <span id="safe-likes-{{ post.id }}" class="text-sm font-semibold" style="color: var(--coffee-800);">{{ post.countSafeLikes() }}</span>

                  <button class="dangerous-like-btn p-1 rounded transition-colors" 
                          data-post-id="{{ post.id }}"
                          onmouseover="this.style.backgroundColor='var(--coffee-100)'" 
                          onmouseout="this.style.backgroundColor='transparent'">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="black" width="16" height="16">
                      <path d="M1 21h22L12 2 1 21z"/>
                      <path fill="white" d="M13 16h-2v2h2v-2zm0-6h-2v4h2v-4z"/>
                    </svg>
                  </button>
                  <span id="dangerous-likes-{{ post.id }}" class="text-sm font-semibold" style="color: var(--coffee-800);">{{ post.countDangerousLikes() }}</span>
                </div>
              </div>

              <!-- Content Section -->
              <div class="flex-1 p-4">
                <div class="flex items-center text-xs mb-2" style="color: var(--coffee-600);">
                  <a href="{{ path('user_profile', {'id': post.userID.id}) }}" class="hover:underline hover:text-blue-600 transition-colors">Posted by u/{{ post.userID.username }}</a>
                  <span class="mx-2">•</span>
                  <span>{{ post.date|date('G\\h i') }}</span>
                </div>

                <h2 class="text-lg font-semibold text-gray-900 mb-3 cursor-pointer transition-colors"
                    onmouseover="this.style.color='var(--coffee-700)'" 
                    onmouseout="this.style.color='#111827'">
                  {{ post.title }}
                </h2>

                <p class="text-gray-700 text-sm mb-4" style="display: -webkit-box; -webkit-line-clamp: 3; -webkit-box-orient: vertical; overflow: hidden;">
                  {{ post.contenu }}
                </p>

                <!-- Action Buttons -->
                <div class="flex items-center justify-between">
                  <div class="flex items-center space-x-4">
                    <button class="flex items-center space-x-1 px-3 py-1 rounded transition-colors text-sm" 
                            style="color: var(--coffee-600);"
                            onmouseover="this.style.backgroundColor='var(--coffee-100)'" 
                            onmouseout="this.style.backgroundColor='transparent'">
                      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"></path>
                      </svg>
                      <span>{{ post.commentaires|length }} commentaires</span>
                    </button>
                    <button class="flex items-center space-x-1 px-3 py-1 rounded transition-colors text-sm" 
                            style="color: var(--coffee-600);"
                            onmouseover="this.style.backgroundColor='var(--coffee-100)'" 
                            onmouseout="this.style.backgroundColor='transparent'">
                      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z"></path>
                      </svg>
                      <span>Partager</span>
                    </button>
                  </div>

                  <a href="{{ path('posts_detail', {'id': post.id}) }}" 
                     class="text-xs px-3 py-1 rounded text-white transition-colors" 
                     style="background-color: var(--coffee-600);"
                     onmouseover="this.style.backgroundColor='var(--coffee-700)'" 
                     onmouseout="this.style.backgroundColor='var(--coffee-600)'">
                    Lire la suite
                  </a>
                </div>
              </div>
            </div>
          </div>
        </div>
        {% endfor %}
      </div>
    {% endif %}

    <!-- Load More -->
    {% if posts is not empty %}
      <div class="text-center mt-8">
        <button class="px-4 py-2 rounded border transition-colors" 
                style="border-color: var(--coffee-300); color: var(--coffee-700);"
                onmouseover="this.style.backgroundColor='var(--coffee-50)'" 
                onmouseout="this.style.backgroundColor='transparent'">
          Charger plus de posts
        </button>
      </div>
    {% endif %}
  </div>
</div>

<script>
    document.querySelectorAll('.safe-like-btn, .dangerous-like-btn').forEach(button => {
        button.addEventListener('click', function() {
            const postId = this.dataset.postId;
            const type = this.classList.contains('safe-like-btn') ? 'safe' : 'dangerous';

            fetch(`/posts/${postId}/toggle-like`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest',
                },
                body: JSON.stringify({ type }),
            })
            .then(response => {
                if (!response.ok) {
                    // If response is not OK, it might be a redirect for unauthenticated user
                    if (response.status === 401) {
                        window.location.href = '/login'; // Redirect to login page
                    }
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                if (data.message === 'Like toggled successfully') {
                    const safeLikesSpan = document.getElementById(`safe-likes-${postId}`);
                    const dangerousLikesSpan = document.getElementById(`dangerous-likes-${postId}`);
                    
                    if (safeLikesSpan) {
                        safeLikesSpan.textContent = data.safeLikes;
                    }
                    if (dangerousLikesSpan) {
                        dangerousLikesSpan.textContent = data.dangerousLikes;
                    }

                    // Mise à jour visuelle des boutons
                    const safeBtn = document.querySelector(`.safe-like-btn[data-post-id="${postId}"]`);
                    const dangerBtn = document.querySelector(`.dangerous-like-btn[data-post-id="${postId}"]`);

                    if (data.action === 'added' || data.action === 'updated') {
                        if (type === 'safe') {
                            safeBtn.classList.add('bg-coffee-100');
                            dangerBtn.classList.remove('bg-coffee-100');
                        } else {
                            dangerBtn.classList.add('bg-coffee-100');
                            safeBtn.classList.remove('bg-coffee-100');
                        }
                    } else if (data.action === 'removed') {
                        safeBtn.classList.remove('bg-coffee-100');
                        dangerBtn.classList.remove('bg-coffee-100');
                    }
                }
            })
            .catch(error => {
                console.error('There was a problem with the fetch operation:', error);
            });
        });
    });
</script>
{% endblock %}
